name: CCP-NC Organisation Traffic Collection
on:
  schedule:
    - cron: "0 */12 * * *"  # Twice daily
  workflow_dispatch:
    inputs:
      full_refresh:
        description: 'Force refresh all repositories'
        type: boolean
        default: false

jobs:
  discover-repos:
    runs-on: ubuntu-latest
    outputs:
      repo_matrix: ${{ steps.list-repos.outputs.repos }}
    steps:
      - name: List Organization Repositories
        id: list-repos
        env:
          GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          ORG_NAME: CCP-NC
        run: |
          repos=$(gh api graphql -f query='
            query($org: String!) {
              organization(login: $org) {
                repositories(first: 100, privacy: PUBLIC, orderBy: {field: PUSHED_AT, direction: DESC}) {
                  nodes {
                    name
                    isArchived
                    pushedAt
                  }
                }
              }
            }' -f org=$ORG_NAME | jq -c '.data.organization.repositories.nodes | map(select(.isArchived == false)) | map(.name)')
          echo "repos=${repos}" >> $GITHUB_OUTPUT

  setup-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Metrics Repository
        uses: actions/checkout@v4
        with:
          repository: CCP-NC/metrics
          token: ${{ secrets.ADMIN_TOKEN }}
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Cache workspace
        uses: actions/cache/save@v3
        with:
          path: |
            .
            ~/.cache/pip
          key: metrics-workspace-${{ github.sha }}

  collect-traffic:
    needs: [discover-repos, setup-environment]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repository: ${{ fromJson(needs.discover-repos.outputs.repo_matrix) }}
      fail-fast: false
      max-parallel: 2
    
    steps:
      - name: Restore workspace
        uses: actions/cache/restore@v3
        with:
          path: |
            .
            ~/.cache/pip
          key: metrics-workspace-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Collect Traffic Data
        env:
          GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          REPO_NAME: ${{ matrix.repository }}
        run: |
          python .github/scripts/collect_traffic.py ${{ matrix.repository }}

      - name: Upload traffic stats
        uses: actions/upload-artifact@v3
        with:
          name: traffic-stats-${{ matrix.repository }}
          path: traffic-stats/
          retention-days: 1

  commit-changes:
    needs: collect-traffic
    runs-on: ubuntu-latest
    steps:
      - name: Restore workspace
        uses: actions/cache/restore@v3
        with:
          path: .
          key: metrics-workspace-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Download all traffic stats
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Merge artifacts
        run: |
          mkdir -p traffic-stats
          cp -r artifacts/traffic-stats-*/* traffic-stats/
          rm -rf artifacts

      - name: Commit and Push Changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull --rebase
          git add traffic-stats/
          if ! git diff-index --quiet HEAD --; then
              git commit -m "chore: update traffic stats for $(date +%Y-%m-%d)"
              git push
          else
              echo "No changes to commit"
          fi